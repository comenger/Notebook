@model GroupDetailModel

@inject IViewLocalizer Localizer

@{
    var user = Context.Session.GetSession<User>("User");
}


@if (Model != null)
{
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-home"></i> @Localizer["Home"]</a></li>
        <li><a href="/@Model.Group.User.Username/groups">@Model.Group.User.Name</a></li>
        <li class="active">@Model.Group.Name</li>
    </ol>
    <div class="row">
        @{ await Html.RenderPartialAsync("~/Views/Group/GroupInfo.cshtml", Model.Group);}

        <div class="col-md-9">
            <div class="nav-tabs-custom">
                @{ await Html.RenderPartialAsync("~/Views/Group/Navigation.cshtml", Model.Navigation);}

                @if (Model.Group.Visible == Visible.Private && Model.Group.Status != Status.Owner)
                {
                    <div class="alert alert-warning" style="margin-top:10px">@Localizer["This group is private"]</div>
                }
                else if (Model.Group.Status == Status.Blocked)
                {
                    <div class="alert alert-danger" style="margin-top:10px">@Localizer["Blocked"]</div>
                }
                else
                {
                    <div class="tab-content">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="box-header with-border">
                                    <h3 class="box-title">@Localizer["Folder List"]</h3>
                                    @if (Model.Group.Status == Status.Owner || Model.Group.Status == Status.Manager)
                                    {
                                        <button class="btn btn-xs btn-success pull-right" data-type="modal" data-action="add-folder?GroupID=@Model.Group.ID">
                                            <i class="fa fa-folder-open-o"></i>&nbsp;@Localizer["Add Folder"]
                                        </button>
                                    }
                                </div>

                                @{ await Html.RenderPartialAsync("~/Views/Shared/Plugins/Filter.cshtml", Model.Data);}
                            </div>
                        </div>
                        <div class="row">
                            @if (Model.Data != null)
                            {
                                foreach (var item in Model.Data.Datalist as List<Folder>)
                                {
                                    <div class="col-md-4 col-sm-6">
                                        <div class="model-card" style="background:@(item.Visible == Visible.Private ? "#fff0db" : "inherit")">
                                            <div class="row">
                                                <div class="col-xs-3 text-center">
                                                    <i class="fa fa-folder-open-o" style="font-size:50px"></i><br />
                                                </div>
                                                <div class="col-xs-9">
                                                    <a href="/@item.ID/folder-detail" class="model-card-title">
                                                        @(item.Name.Length > 18 ? item.Name.Substring(0, 18) + "..." : item.Name)
                                                    </a><br />
                                                    <small style="color:#808080"><i class="fa fa-newspaper-o"></i> @Localizer["Notes"]: @item.Notes.Count</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <div class="box-footer">
                            @Localizer["Total"]: @Model.Data.TotalData
                            @Html.Raw(Model.Data.Pagination)
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning">@Localizer["Group not found"]</div>
}



